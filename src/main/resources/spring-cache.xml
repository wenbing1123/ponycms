<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                    http://www.springframework.org/schema/cache
                    http://www.springframework.org/schema/cache/spring-cache-4.1.xsd">
  
  	<!-- 缓存管理工厂 -->
    <bean id="cacheManagerFactory" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>
          
    <!-- 缓存管理类 -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cacheManager-ref="cacheManagerFactory"/>
    
    
    <!-- 注解驱动缓存业务类方法支持
        @Cacheable：负责将方法的返回值加入到缓存中
            value：缓存位置名称，不能为空，如果使用EHCache，就是ehcache.xml中声明的cache的name
            key：缓存的key，默认为空，既表示使用方法的参数类型及参数值作为key，支持SpEL
            condition：触发条件，只有满足条件的情况才会加入缓存，默认为空，既表示全部都加入缓存，支持SpEL
        @CacheEvict：负责清除缓存
            value：缓存位置名称，不能为空，同上
            key：缓存的key，默认为空，同上
            condition：触发条件，只有满足条件的情况才会清除缓存，默认为空，支持SpEL
            allEntries：true表示清除value中的全部缓存，默认为false
    -->
    <cache:annotation-driven cache-manager="cacheManager" proxy-target-class="true"/>
                
</beans>